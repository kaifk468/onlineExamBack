#Before running this compose file make sure download both frontEnd and backEnd images from dokerhub
#==> BackEnd img : docker push kaifk468/online-exam-back
#==> FrontEnd img : docker push kaifk468/online-exam-front
services:
  postgres:
    container_name: postgres-con
    image: postgres:alpine3.18
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: onlineexam
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
     - C:\Users\shivamjais\Desktop\WorkSpace\Docker\DockerVolume:/var/lib/postgresql/data
    restart: always
    networks:
      - mynetwork

  spring-app:
    container_name: backend-con
    image: exam-backend-img
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - mynetwork
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5435/onlineexam
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: root
    restart: always

  angular-app:
    container_name: fronend-con
    image: online-examfront-img
    ports:
      - "4200:4200"
    depends_on:
      - spring-app
    networks:
      - mynetwork
    restart: always

networks:
  mynetwork:


###############################################################################################

#services:
#  db:
#    ports:
#      - 5432:5432
#    container_name: postgresql_container
#    image: postgres
#    environment:
#      - POSTGRES_DB=onlineexam
#      - POSTGRES_USERNAME=postgres
#      - POSTGRES_PASSWORD=root
#    volumes:
#      - C:\Users\shivamjais\Desktop\postgresDataBase:/var/lib/postgresql/data
#    restart: always
#  backend:
#    build: .
#    ports:
#      - 8080:8080
#    container_name: online_backend_container
#    depends_on:
#      - db
#    restart: always

